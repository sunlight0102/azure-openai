{
    "IsEncrypted": false,
    "Values": {
      "FUNCTIONS_WORKER_RUNTIME": "python",
      "DOCGENERATOR_URL": "http://localhost:7071/api/DocGenerator?code=",
      "AdminPassword": "P@ssw0rd", // Admin Password that is used for protected pages
      "UploadPassword": "P@ssw0rd", // Upload Password that is used for uploading files
      "AzureWebJobsStorage": "UseDevelopmentStorage=true",
      "OpenAiApiKey": "", // OpenAI Key
      "OpenAiKey": "", // Azure Open AI Key
      "OpenAiService": "", // Name of Azure Open AI Service
      "OpenAiEndPoint": "", // FQDN of Azure Open AI Service
      "OpenAiVersion": "2022-12-01",
      "OpenAiDavinci": "", // Deployment name of Davinci-003
      "OpenAiEmbedding": "", // Deployment name of Ada-003
      "FormRecognizerEndPoint": "", // Form Recognizer Endpoint
      "FormRecognizerKey": "",  // Form Recognizer Key
      "MaxTokens": 500, 
      "Temperature": 0.3,
      "CosmosEndpoint":"https://<>.documents.azure.com:443/",
      "CosmosKey":"",
      "CosmosDatabase":"aoai",
      "CosmosContainer":"chatgpt",
      "OpenAiChat": "", // GPT 3.5 deployment name
      "PineconeKey": "", // Pinecone key
      "PineconeEnv": "", // Pinecone Env
      "VsIndexName": "", // Index name
      "RedisPassword": "Password", // Redis Password
      "RedisAddress": "http://localhost", // Redis URL
      "RedisPort": "6379",
      "ChromaUrl": "", // Chroma URL
      "ChromaPort": "8000",
      "OpenAiDocStorName": "", // Storage name
      "OpenAiDocStorKey": "", // Storage doc
      "OpenAiDocStorConnString": "", // Storage connection string
      "OpenAiDocContainer": "", // Storage Container
      "KbIndexName" : "aoaikb",
      "SearchService":"", // Search Service 
      "SearchKey":"", // Search Key
      "BingUrl": "https://api.bing.microsoft.com/v7.0/search",
      "BingKey": "",  
      "SecDocContainer": "",// Storage Container for storing SEC documents
      "SynapseName": "", // Name of your database for SQL NLP
      "SynapsePool": "", // Name of SQL Pool or the database
      "SynapseUser": "", // User name for SQL NLP
      "SynapsePassword": "", // User name for SQL Password
      "RealTimeSpeechPrompt": "\"\"\"Write a concise summary of the following: \r\n \r\n{text}\"\"\"",
      "RealTimeSpeechPromptIv": "text",
      "RtsInsurancePrompt": "\"\"\"Extract the following from the conversation:\n1. Main reason of the conversation\n2. Sentiment of the customer\n3. Where the accident happened?\n4. How did the accident happen?\n5. What was the weather like when the accident happened?\n6. What is customer's phone number?\n7. Was the airbag deployed when accident happened? \r\n \r\n{text}\"\"\"",
      "RtsInsurancePromptIv": "text",
      "RtsBankingPrompt": "\"\"\"Extract the following from the conversation:\n1. Main reason of the conversation\n2. Sentiment of the customer \r\n \r\n{text}\"\"\"",
      "RtsBankingPromptIv": "text",
      "RtsCapMarketPrompt": "\"\"\"Extract the following from the conversation:\n1. Main reason of the conversation\n2. Sentiment of the customer \r\n \r\n{text}\"\"\"",
      "RtsCapMarketPromptIv": "text",
      "RtsHealthcarePrompt": "\"\"\"Extract the following from the conversation:\n1. Main reason of the conversation\n2. Sentiment of the customer\n3. What health condition was discussed? \n4. Was any medication mentioned in the conversation?\n5. Identify medical entities such as symptoms, medications, diagnosis from this conversaion. \r\n \r\n{text}\"\"\"",
      "RtsHealthcarePromptIv": "text",
      "RtsGeneralPrompt": "\"\"\"Extract the following from the conversation:\n1. Main reason of the conversation\n2. Sentiment of the customer\n3. What are the action items and follow-ups? \r\n \r\n{text}\"\"\"",
      "RtsGeneralPromptIv": "text",
      "RtsSummaryNotesPrompt": "\"\"\"Generate detailed call summary notes in list format from the following text \r\n \r\n{text}\"\"\"",
      "RtsSummaryNotesPromptIv": "text",
      "RtsParticipantsPrompt": "\"\"\"Extract list of call participants in list format from the following text \r\n \r\n{text}\"\"\"",
      "RtsParticipantsPromptIv": "text",
      "RtsFollowupPrompt": "\"\"\"Generate list of call follow up tasks from following text \r\n \r\n{text}\"\"\"",
      "RtsFollowupPromptIv": "text",
      "RtsPharmacyPrompt": "\"\"\"Provide list of medications, dose, and form discussed in the following text \r\n \r\n{text}\"\"\"",
      "RtsPharmacyPromptIv": "text",
      "RtsPiiPrompt": "\"\"\"List of all PII and named entities and what is overall sentiment of the conversation \r\n \r\n{text}\"\"\"",
      "RtsPiiPromptIv": "text",
      "RtsTopicsPrompt": "\"\"\"Generate list of topics discussed from text \r\n \r\n{text}\"\"\"",
      "RtsTopicsPromptIv": "text",
      "RtsComplexPrompt": "\"\"\"You must extract the following information from the phone conversation below: \n\n 1. Call reason (key: reason) \n 2. Cause of incident (key: cause) \n 3. Name of caller (key: caller) \n 4. Account number (key: account_id) \n 5. Follow-up Flag(key: followupind) \n 6. A short, yet detailed summary (key: summary) \n\n Make sure fields 1 to 4 are answered very short. Field 5 is a boolean flag which indicates whether the caller incident was resolved, 1 if follow up required, 0 if resolved.  Please answer in JSON machine-readable format, using the keys from above. Format the output as JSON object. Pretty print the JSON and make sure that is properly closed at the end. \r\n \r\n{text}\"\"\"",
      "RtsComplexPromptIv": "text",
      "OpenAiQuestionPrompt": "\"\"\"Please reply to the question using only the information present in the text above. If you can't find it, reply 'Not in the text'.\nQuestion: _QUESTION_\nAnswer:\"\"\""
    },
    "Host": {
      "LocalHttpPort": 7071,
      "CORS": "*",
      "CORSCredentials": false
    }
  }
  